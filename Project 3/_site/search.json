[
  {
    "objectID": "skill_gap_analysis.html",
    "href": "skill_gap_analysis.html",
    "title": "Skill Gap Analysis",
    "section": "",
    "text": "import pandas as pd\n\n# Team members and their self-rated proficiency (1–5)\n# Team members and their self-rated proficiency (1–5)\nskills_data = {\n    \"Name\":             [\"Deyang\", \"Yani\", \"Jiapei\", \"Junhao\"],\n    \"Python\":           [4,        3,      4,         3],\n    \"SQL\":              [3,        3,      4,         3],\n    \"Machine Learning\": [2,        5,      5,         2],\n    \"Cloud Computing\":  [1,        4,      2,         3],\n    \"R\":                [3,        5,      4,         2],   # \n    \"AWS\":              [4,        4,      2,         3],   # \n    \"Git\":              [4,        3,      2,         1],   # \n    \"Excel\":            [3,        4,      5,         2],   # \n}\n\ndf_skills = pd.DataFrame(skills_data).set_index(\"Name\")\ndf_skills\n\n\n\n\n\n\n\n\nPython\nSQL\nMachine Learning\nCloud Computing\nR\nAWS\nGit\nExcel\n\n\nName\n\n\n\n\n\n\n\n\n\n\n\n\nDeyang\n4\n3\n2\n1\n3\n4\n4\n3\n\n\nYani\n3\n3\n5\n4\n5\n4\n3\n4\n\n\nJiapei\n4\n4\n5\n2\n4\n2\n2\n5\n\n\nJunhao\n3\n3\n2\n3\n2\n3\n1\n2\n\n\n\n\n\n\n\n3.1.2 Compare to Market Demand\n\n# read cleaned job postings\ndf = pd.read_csv(\"../data/lightcast_job_postings_cleaned.csv\")\n\n# use the same skill columns\ntop_skills = df_skills.columns.tolist()\n\n# count occurrences of each skill keyword in the job BODY\njob_text = df[\"BODY\"].fillna(\"\")\nskill_counts = {s: job_text.str.contains(s, case=False).sum() for s in top_skills}\n\n# append a Market Demand row\ndf_skills.loc[\"Market Demand\"] = [skill_counts[s] for s in top_skills]\ndf_skills\n\n\n\n\n\n\n\n\nPython\nSQL\nMachine Learning\nCloud Computing\nR\nAWS\nGit\nExcel\n\n\nName\n\n\n\n\n\n\n\n\n\n\n\n\nDeyang\n4\n3\n2\n1\n3\n4\n4\n3\n\n\nYani\n3\n3\n5\n4\n5\n4\n3\n4\n\n\nJiapei\n4\n4\n5\n2\n4\n2\n2\n5\n\n\nJunhao\n3\n3\n2\n3\n2\n3\n1\n2\n\n\nMarket Demand\n11782\n23202\n3972\n1302\n69162\n14243\n14695\n36379\n\n\n\n\n\n\n\n3.1.3 Visualize Skill Gaps\n\nimport matplotlib.pyplot as plt\n\n# skills only\nplt.figure(figsize=(6,2))\nplt.imshow(df_skills.iloc[:-1], aspect=\"auto\")               # drop the Market Demand row\nplt.colorbar(label=\"Skill Level (1–5)\")\nplt.yticks(range(4), df_skills.index[:-1])\nplt.xticks(range(len(df_skills.columns)), df_skills.columns, rotation=45, ha=\"right\")\nplt.title(\"Team Skill Levels\")\nplt.tight_layout()\nplt.show()\n\n# demand only\nplt.figure(figsize=(6,2))\nplt.imshow([df_skills.loc[\"Market Demand\"]], aspect=\"auto\")  # just the demand row\nplt.colorbar(label=\"Market Demand Count\")\nplt.yticks([0], [\"Market Demand\"])\nplt.xticks(range(len(df_skills.columns)), df_skills.columns, rotation=45, ha=\"right\")\nplt.title(\"Market Demand by Skill\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhj\nBased on the heatmap comparison of each person’s self-ratings (1–5) against the normalized market-demand scores, here’s a concise, paragraph-style improvement plan:\nDeyang shows the largest gaps in Cloud Computing and R. To close these, start with an AWS Fundamentals micro-course (Coursera or AWS’s own training) and follow up by building a small R Shiny dashboard using the free “R for Data Science” online book and the swirl R package for hands-on exercises. Aim to spend 2–3 hours per week on labs, then peer-review each other’s code in GitHub.\nYani needs to boost Machine Learning and AWS skills. I recommend Andrew Ng’s Machine Learning specialization on Coursera, paired with the AWS Certified Cloud Practitioner path on AWS Training. After completing each module, apply what you’ve learned by deploying a simple classification model on AWS Sagemaker and sharing the workflow in a team repo, so everyone can give feedback.\nJiapei would benefit most from deeper Cloud Computing practice and reinforcing R. Enroll in Google Cloud’s “Data Engineering” Qwiklabs quests and run through interactive R exercises via swirl. Host a 30-minute “teach-back” session after completing each mini-project—this both cements your own understanding and helps teammates pick up new tricks.\nJunhao has room to grow in Excel and SQL. Take an “Excel Essentials” short course on LinkedIn Learning, then tackle Mode’s SQL tutorial problems. Organize weekly problem-solving sessions where one member presents a real-world dataset and the rest write SQL queries together. This combination of structured learning and peer collaboration will efficiently close the remaining gaps."
  },
  {
    "objectID": "skill_gap_analysis.html#skill-gap-analysis",
    "href": "skill_gap_analysis.html#skill-gap-analysis",
    "title": "Skill Gap Analysis",
    "section": "",
    "text": "import pandas as pd\n\n# Team members and their self-rated proficiency (1–5)\n# Team members and their self-rated proficiency (1–5)\nskills_data = {\n    \"Name\":             [\"Deyang\", \"Yani\", \"Jiapei\", \"Junhao\"],\n    \"Python\":           [4,        3,      4,         3],\n    \"SQL\":              [3,        3,      4,         3],\n    \"Machine Learning\": [2,        5,      5,         2],\n    \"Cloud Computing\":  [1,        4,      2,         3],\n    \"R\":                [3,        5,      4,         2],   # \n    \"AWS\":              [4,        4,      2,         3],   # \n    \"Git\":              [4,        3,      2,         1],   # \n    \"Excel\":            [3,        4,      5,         2],   # \n}\n\ndf_skills = pd.DataFrame(skills_data).set_index(\"Name\")\ndf_skills\n\n\n\n\n\n\n\n\nPython\nSQL\nMachine Learning\nCloud Computing\nR\nAWS\nGit\nExcel\n\n\nName\n\n\n\n\n\n\n\n\n\n\n\n\nDeyang\n4\n3\n2\n1\n3\n4\n4\n3\n\n\nYani\n3\n3\n5\n4\n5\n4\n3\n4\n\n\nJiapei\n4\n4\n5\n2\n4\n2\n2\n5\n\n\nJunhao\n3\n3\n2\n3\n2\n3\n1\n2\n\n\n\n\n\n\n\n3.1.2 Compare to Market Demand\n\n# read cleaned job postings\ndf = pd.read_csv(\"../data/lightcast_job_postings_cleaned.csv\")\n\n# use the same skill columns\ntop_skills = df_skills.columns.tolist()\n\n# count occurrences of each skill keyword in the job BODY\njob_text = df[\"BODY\"].fillna(\"\")\nskill_counts = {s: job_text.str.contains(s, case=False).sum() for s in top_skills}\n\n# append a Market Demand row\ndf_skills.loc[\"Market Demand\"] = [skill_counts[s] for s in top_skills]\ndf_skills\n\n\n\n\n\n\n\n\nPython\nSQL\nMachine Learning\nCloud Computing\nR\nAWS\nGit\nExcel\n\n\nName\n\n\n\n\n\n\n\n\n\n\n\n\nDeyang\n4\n3\n2\n1\n3\n4\n4\n3\n\n\nYani\n3\n3\n5\n4\n5\n4\n3\n4\n\n\nJiapei\n4\n4\n5\n2\n4\n2\n2\n5\n\n\nJunhao\n3\n3\n2\n3\n2\n3\n1\n2\n\n\nMarket Demand\n11782\n23202\n3972\n1302\n69162\n14243\n14695\n36379\n\n\n\n\n\n\n\n3.1.3 Visualize Skill Gaps\n\nimport matplotlib.pyplot as plt\n\n# skills only\nplt.figure(figsize=(6,2))\nplt.imshow(df_skills.iloc[:-1], aspect=\"auto\")               # drop the Market Demand row\nplt.colorbar(label=\"Skill Level (1–5)\")\nplt.yticks(range(4), df_skills.index[:-1])\nplt.xticks(range(len(df_skills.columns)), df_skills.columns, rotation=45, ha=\"right\")\nplt.title(\"Team Skill Levels\")\nplt.tight_layout()\nplt.show()\n\n# demand only\nplt.figure(figsize=(6,2))\nplt.imshow([df_skills.loc[\"Market Demand\"]], aspect=\"auto\")  # just the demand row\nplt.colorbar(label=\"Market Demand Count\")\nplt.yticks([0], [\"Market Demand\"])\nplt.xticks(range(len(df_skills.columns)), df_skills.columns, rotation=45, ha=\"right\")\nplt.title(\"Market Demand by Skill\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhj\nBased on the heatmap comparison of each person’s self-ratings (1–5) against the normalized market-demand scores, here’s a concise, paragraph-style improvement plan:\nDeyang shows the largest gaps in Cloud Computing and R. To close these, start with an AWS Fundamentals micro-course (Coursera or AWS’s own training) and follow up by building a small R Shiny dashboard using the free “R for Data Science” online book and the swirl R package for hands-on exercises. Aim to spend 2–3 hours per week on labs, then peer-review each other’s code in GitHub.\nYani needs to boost Machine Learning and AWS skills. I recommend Andrew Ng’s Machine Learning specialization on Coursera, paired with the AWS Certified Cloud Practitioner path on AWS Training. After completing each module, apply what you’ve learned by deploying a simple classification model on AWS Sagemaker and sharing the workflow in a team repo, so everyone can give feedback.\nJiapei would benefit most from deeper Cloud Computing practice and reinforcing R. Enroll in Google Cloud’s “Data Engineering” Qwiklabs quests and run through interactive R exercises via swirl. Host a 30-minute “teach-back” session after completing each mini-project—this both cements your own understanding and helps teammates pick up new tricks.\nJunhao has room to grow in Excel and SQL. Take an “Excel Essentials” short course on LinkedIn Learning, then tackle Mode’s SQL tutorial problems. Organize weekly problem-solving sessions where one member presents a real-world dataset and the rest write SQL queries together. This combination of structured learning and peer collaboration will efficiently close the remaining gaps."
  }
]